pipeline {
    agent any

    environment {
        TF_STATE_BUCKET = "my-terraform-state-bucket-425"
        TF_STATE_KEY = "terraform.tfstate"
        AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
        PEM_FILE = "C:/Ansible-keys/terraformkeypair.pem"
        WINDOWS_USER = "Administrator"
    }

    stages {
        stage('Fetch Windows VM IPs') {
            steps {
                script {
                    bat "\"C:\\Program Files\\Git\\bin\\bash.exe\" -c 'AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} aws s3 cp s3://${TF_STATE_BUCKET}/${TF_STATE_KEY} terraform.tfstate'"

                    def windowsIPs = powershell(returnStdout: true, script: """
                        \$tfState = Get-Content terraform.tfstate -Raw | ConvertFrom-Json
                        \$windowsIPs = \$tfState.resources | Where-Object { \$_.'type' -eq 'aws_instance' } | ForEach-Object { \$_.'instances' } | ForEach-Object { \$_[0].'attributes'.'public_ip' }
                        \$windowsIPs -join ', '
                    """).trim()

                    echo "Windows Instance IPs: ${windowsIPs}"
                    env.WINDOWS_IPS = windowsIPs
                }
            }
        }

        stage('Download Scripts from S3') {
            steps {
                bat """
                    aws s3 cp s3://${TF_STATE_BUCKET}/ConfigureRemotingForAnsible.ps1 .
                    aws s3 cp s3://${TF_STATE_BUCKET}/create_user.ps1 .
                """
            }
        }

        stage('Transfer Scripts to Windows VMs') {
            steps {
                script {
                    def ipList = env.WINDOWS_IPS.split(', ')
                    for (ip in ipList) {
                        bat """
                            scp -i ${PEM_FILE} -o StrictHostKeyChecking=no ConfigureRemotingForAnsible.ps1 ${WINDOWS_USER}@${ip}:C:\\Windows\\Temp\\
                            scp -i ${PEM_FILE} -o StrictHostKeyChecking=no create_user.ps1 ${WINDOWS_USER}@${ip}:C:\\Windows\\Temp\\
                        """
                    }
                }
            }
        }

        stage('Execute Scripts on Windows VMs') {
            steps {
                script {
                    def ipList = env.WINDOWS_IPS.split(', ')
                    for (ip in ipList) {
                        bat """
                            ssh -i ${PEM_FILE} -o StrictHostKeyChecking=no ${WINDOWS_USER}@${ip} ^
                            "powershell -ExecutionPolicy Bypass -File C:\\Windows\\Temp\\ConfigureRemotingForAnsible.ps1"

                            ssh -i ${PEM_FILE} -o StrictHostKeyChecking=no ${WINDOWS_USER}@${ip} ^
                            "powershell -ExecutionPolicy Bypass -File C:\\Windows\\Temp\\create_user.ps1"
                        """
                    }
                }
            }
        }
    }
}
