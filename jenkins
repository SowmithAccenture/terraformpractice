pipeline {
    agent any
    environment {
        AWS_ACCESS_KEY_ID     = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm  // Checkout your git repository
            }
        }
        stage('Init') {
        steps {
            script {
                def gitBash = 'C:\\Program Files\\Git\\bin\\bash.exe'
                def terraformPath = '/c/terraform/terraform_1.9.8_windows_amd64/terraform.exe'
                
                // Initialize Terraform with the backend configuration from backend.tf
                bat "\"${gitBash}\" -c '${terraformPath} init -force-copy'"
            }
        }
    }




        stage('Plan') {
            steps {
                script {
                    def gitBash = 'C:\\Program Files\\Git\\bin\\bash.exe'
                    def terraformPath = '/c/terraform/terraform_1.9.8_windows_amd64/terraform.exe'
                    bat "\"${gitBash}\" -c '${terraformPath} plan -out=tfplan' -input=false"
                }
            }
        }

        stage('Apply') {
            steps {
                script {
                    def gitBash = 'C:\\Program Files\\Git\\bin\\bash.exe'
                    def terraformPath = '/c/terraform/terraform_1.9.8_windows_amd64/terraform.exe'
                    
                    // Apply the Terraform plan
                    bat "\"${gitBash}\" -c '${terraformPath} apply -input=false tfplan'"
                    
                    // Archive the state
                    archiveArtifacts artifacts: '**/terraform.tfstate', allowEmptyArchive: true
                }
            }
        }
    }
}
